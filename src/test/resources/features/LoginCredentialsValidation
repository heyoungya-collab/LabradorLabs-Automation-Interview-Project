** Negative Test Scenarios for Login Credentials **

email:
1. invalid domain but format has @ and .
2. valid format email, valid format password
3. invalid email (double @), valid password format
4. missing '.' in domain (invalid format)
5. missing '.' in domain (invalid format)
6. double dot in domain (invalid format)
7. valid email, invalid password (too short)
8. valid email, invalid password (no numbers or symbols)
9. valid email, invalid password (>20 chars)
10. valid email, empty password

password:
1. too short
2. only letters (letters only, no numbers or special chars)
3. 123456789012345678901 (too long)
4. no special characters)
5. no numbers
6. contains whitespace
7. valid password, empty email



/*
Bug: Unclear Accepted Characters in Email ID (Before and After @)

Description:

It is unclear which special characters are accepted in the email ID (local part before the @ symbol). Currently, only underscore (_), dash (-), and dot (.) are accepted along with letters (e.g., user_nodot@domain),
but this lacks clarity and completeness regarding other valid characters allowed by email standards.

According to RFC 5322, the local part may include letters, digits, and special characters: ! # $ % & ' * + - / = ? ^ _ ` { | } ~ and dot (.) with restrictions (dot cannot be first, last, or consecutive).

After the @ symbol (domain part), the current system accepts domains without a dot (e.g., user@domaincom), which is non-standard though sometimes tolerated by some email providers.

This lack of clarity causes confusion and inconsistent input acceptance.

Expected:

Clearly specify accepted characters and format rules for the local part (before @ after @).

Enforce or communicate domain part requirements, encouraging domain names with at least one dot (like .com).

Provide consistent error messages and input guidance for both parts of the email.


 */